#!/bin/bash

# Railway Environment Variables Setup Script
# Generated by Hive Mind Collective Intelligence System
# Uses values from existing .env file

set -e

echo "üöÄ Setting up Railway Environment Variables..."
echo "=============================================="

# Load environment variables from .env file
if [ -f ".env" ]; then
    source .env
    echo "‚úÖ Loaded variables from .env file"
else
    echo "‚ùå .env file not found. Please ensure you're in the project root."
    exit 1
fi

# Check if Railway CLI is installed and logged in
if ! command -v railway &> /dev/null; then
    echo "‚ùå Railway CLI not found. Please install it first:"
    echo "curl -sSL https://railway.app/install.sh | bash"
    exit 1
fi

if ! railway whoami &> /dev/null; then
    echo "üîë Please login to Railway first:"
    echo "railway login"
    exit 1
fi

echo "‚úÖ Railway CLI authenticated"

# Connect to the existing project
RAILWAY_PROJECT_ID="df2278b8-6302-43c1-befb-60ff3458701f"
echo "üîå Connecting to Railway project: $RAILWAY_PROJECT_ID"

# Function to set environment variable for a service
set_railway_var() {
    local service=$1
    local var_name=$2
    local var_value=$3
    
    if [ ! -z "$var_value" ]; then
        echo "Setting $var_name for $service..."
        railway variables set "$var_name=$var_value" --service "$service" || echo "‚ö†Ô∏è Failed to set $var_name for $service"
    fi
}

echo ""
echo "‚öôÔ∏è  Setting environment variables for all services..."

# Common variables for all services
COMMON_VARS=(
    "NODE_ENV:$NODE_ENV"
    "TIINGO_API_KEY:$TIINGO_API_KEY"
    "ALPHA_VANTAGE_KEY:$ALPHA_VANTAGE_KEY" 
    "FRED_KEY:$FRED_KEY"
    "BUREAU_OF_STATISTIC_KEY:$BUREAU_OF_STATISTIC_KEY"
    "OPENAI_API_KEY:$OPENAI_API_KEY"
    "ANTHROPIC_API_KEY:$ANTHROPIC_API_KEY"
    "SECRET_KEY:$SECRET_KEY"
    "LOG_LEVEL:$LOG_LEVEL"
)

# Set up FastAPI Backend Service
echo ""
echo "üîß Configuring FastAPI Backend Service..."
FASTAPI_SERVICE="fastapi-backend"

# Railway managed database URLs
set_railway_var "$FASTAPI_SERVICE" "DATABASE_URL" "\${{Postgres.DATABASE_URL}}"
set_railway_var "$FASTAPI_SERVICE" "REDIS_URL" "\${{Redis.REDIS_URL}}"

# Common API keys and settings
for var in "${COMMON_VARS[@]}"; do
    IFS=':' read -r var_name var_value <<< "$var"
    set_railway_var "$FASTAPI_SERVICE" "$var_name" "$var_value"
done

# FastAPI specific variables
set_railway_var "$FASTAPI_SERVICE" "ENVIRONMENT" "production"
set_railway_var "$FASTAPI_SERVICE" "PORT" "\${{PORT}}"
set_railway_var "$FASTAPI_SERVICE" "ALLOWED_ORIGINS" "https://gayed-signals-dashboard-alpirwn5h-philippe-beliveaus-projects.vercel.app"
set_railway_var "$FASTAPI_SERVICE" "CELERY_BROKER_URL" "\${{Redis.REDIS_URL}}/1"
set_railway_var "$FASTAPI_SERVICE" "CELERY_RESULT_BACKEND" "\${{Redis.REDIS_URL}}/1"

# Additional APIs from .env
set_railway_var "$FASTAPI_SERVICE" "GEMINI_API_KEY" "$GEMINI_API_KEY"
set_railway_var "$FASTAPI_SERVICE" "PERPLEXITY_API_KEY" "$PERPLEXITY_API_KEY"
set_railway_var "$FASTAPI_SERVICE" "SUPABASE_API_KEY" "$SUPABASE_API_KEY"
set_railway_var "$FASTAPI_SERVICE" "QDRANT_API_KEY" "$QDRANT_API_KEY"
set_railway_var "$FASTAPI_SERVICE" "PUBMED_API_KEY" "$PUBMED_API_KEY"
set_railway_var "$FASTAPI_SERVICE" "GNEWS_API_KEY" "$GNEWS_API_KEY"
set_railway_var "$FASTAPI_SERVICE" "REDDIT_API_KEY" "$REDDIT_API_KEY"

# Set up Backtrader/Flask Service  
echo ""
echo "üîß Configuring Backtrader Service..."
BACKTRADER_SERVICE="backtrader-service"

# Railway managed database URLs
set_railway_var "$BACKTRADER_SERVICE" "DATABASE_URL" "\${{Postgres.DATABASE_URL}}"
set_railway_var "$BACKTRADER_SERVICE" "REDIS_URL" "\${{Redis.REDIS_URL}}"

# Common API keys and settings
for var in "${COMMON_VARS[@]}"; do
    IFS=':' read -r var_name var_value <<< "$var"
    set_railway_var "$BACKTRADER_SERVICE" "$var_name" "$var_value"
done

# Flask/Backtrader specific variables
set_railway_var "$BACKTRADER_SERVICE" "FLASK_ENV" "production"
set_railway_var "$BACKTRADER_SERVICE" "PORT" "\${{PORT}}"
set_railway_var "$BACKTRADER_SERVICE" "FLASK_HOST" "0.0.0.0"
set_railway_var "$BACKTRADER_SERVICE" "MAX_ANALYSIS_TIME" "$MAX_ANALYSIS_TIME"
set_railway_var "$BACKTRADER_SERVICE" "INITIAL_CAPITAL" "$INITIAL_CAPITAL"
set_railway_var "$BACKTRADER_SERVICE" "CORS_ORIGINS" "https://gayed-signals-dashboard-alpirwn5h-philippe-beliveaus-projects.vercel.app"

# Set up Frontend Service (if deploying to Railway)
echo ""
echo "üîß Configuring Frontend Service..."
FRONTEND_SERVICE="frontend"

set_railway_var "$FRONTEND_SERVICE" "NODE_ENV" "production"
set_railway_var "$FRONTEND_SERVICE" "NEXT_TELEMETRY_DISABLED" "1"
set_railway_var "$FRONTEND_SERVICE" "PYTHON_SERVICE_URL" "http://backtrader-service.railway.internal:5000"
set_railway_var "$FRONTEND_SERVICE" "FASTAPI_BASE_URL" "http://fastapi-backend.railway.internal:8000"

# Frontend API keys (for client-side usage where needed)
set_railway_var "$FRONTEND_SERVICE" "TIINGO_API_KEY" "$TIINGO_API_KEY"
set_railway_var "$FRONTEND_SERVICE" "FRED_KEY" "$FRED_KEY"

echo ""
echo "üìä Checking Railway service status..."
railway status

echo ""
echo "üéâ Railway environment variables setup complete!"
echo "================================================="
echo "‚úÖ FastAPI Backend: All variables configured"
echo "‚úÖ Backtrader Service: All variables configured"  
echo "‚úÖ Frontend Service: All variables configured"
echo "‚úÖ Database URLs: Using Railway managed services"
echo ""
echo "üîç Verify your configuration:"
echo "railway variables --service fastapi-backend"
echo "railway variables --service backtrader-service"
echo ""
echo "üöÄ Deploy or redeploy services:"
echo "railway up --service fastapi-backend"
echo "railway up --service backtrader-service"
echo ""
echo "üè• Check service health:"
echo "railway logs --service fastapi-backend"
echo "railway logs --service backtrader-service"

exit 0