(()=>{var e={};e.id=868,e.ids=[868],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},28354:e=>{"use strict";e.exports=require("util")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},46852:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>y,routeModule:()=>g,serverHooks:()=>b,workAsyncStorage:()=>f,workUnitAsyncStorage:()=>R});var s={};r.r(s),r.d(s,{GET:()=>h,POST:()=>d});var a=r(48106),o=r(48819),i=r(12050),n=r(4235),l=r(96155);class u{constructor(e={}){this.rateLimit=e.rateLimit??100,this.maxRetries=e.maxRetries??3,this.timeout=e.timeout??3e4,this.stats={totalRequests:0,successfulRequests:0,failedRequests:0}}getRateLimit(){return this.rateLimit}getMaxRetries(){return this.maxRetries}getTimeout(){return this.timeout}getUsageStats(){return{...this.stats}}async delay(e){return new Promise(t=>setTimeout(t,e))}async fetchSingleSymbol(e,t=1){try{this.stats.totalRequests++;let t=e.replace("^",""),r=await l.default.historical(e,{period1:new Date(Date.now()-63072e6),period2:new Date,interval:"1d"});if(!Array.isArray(r)||0===r.length)return this.stats.failedRequests++,[];let s=r.filter(e=>!!e&&"number"==typeof e.close&&!!e.date&&e.close>0&&isFinite(e.close)).map(e=>({date:e.date.toISOString().split("T")[0],symbol:t,close:e.close,volume:e.volume}));if(0===s.length&&r.length>0)return this.stats.failedRequests++,[];return this.stats.successfulRequests++,this.stats.lastRequestTime=new Date,console.log(`‚úÖ Fetched ${s.length} data points for ${e}`),s}catch(s){console.error(`‚ùå Error fetching data for ${e} (attempt ${t}):`,s);let r=s instanceof Error?s.message:"";if(("RateLimitError"===(s instanceof Error?s.name:"")||r.includes("Too many requests"))&&t<=this.maxRetries){let r=1e3*Math.pow(2,t-1);return console.log(`‚è±Ô∏è Rate limited, retrying in ${r}ms...`),await this.delay(r),this.fetchSingleSymbol(e,t+1)}return this.stats.failedRequests++,[]}}async fetchMarketData(e){if(0===e.length)return{};let t={};for(let r of e){let s=await this.fetchSingleSymbol(r);t[r.replace("^","")]=s,e.indexOf(r)<e.length-1&&await this.delay(this.rateLimit)}return t}}async function c(e,t="2y"){return new u().fetchMarketData(e)}async function d(e){try{let{startDate:t,endDate:r,symbols:s}=await e.json(),a=["WOOD","CUT"],o=a.some(e=>s.includes(e)),i=s.includes("GLD");if(!o||!i)return n.NextResponse.json({error:`LUMBER/GOLD STRATEGY REQUIRES: One lumber ETF (${a.join(" or ")}) and GLD (gold ETF) must be selected`},{status:400});let l=a.find(e=>s.includes(e))||"WOOD",u=await m([l,"GLD"],t,r);if(!u[l]||!u.GLD)return n.NextResponse.json({error:`REAL DATA REQUIRED: Cannot fetch lumber (${l}) or gold (GLD) data. Please ensure market data service is available.`},{status:503});let c=await p(u,t,r,l);return n.NextResponse.json(c)}catch(e){return console.error("Lumber/Gold backtest error:",e),n.NextResponse.json({error:e instanceof Error?e.message:"Backtesting failed"},{status:500})}}async function m(e,t,r){try{console.log(`üîç Fetching REAL market data for ${e.join(", ")} from ${t} to ${r}`);let s=await c(e,"5y"),a={},o=new Date(t),i=new Date(r);for(let t of e)if(s[t]&&s[t].length>0)a[t]=s[t].filter(e=>{let t=new Date(e.date);return t>=o&&t<=i}).map(e=>({date:e.date,symbol:e.symbol,close:e.close,volume:e.volume||0})).sort((e,t)=>new Date(e.date).getTime()-new Date(t.date).getTime()),console.log(`‚úÖ Retrieved ${a[t].length} data points for ${t}`);else throw Error(`REAL DATA UNAVAILABLE: No data received for ${t} from Yahoo Finance`);for(let t of e)if(!a[t]||a[t].length<100)throw Error(`INSUFFICIENT REAL DATA: ${t} has only ${a[t]?.length||0} data points (minimum 100 required)`);return a}catch(e){throw console.error("‚ùå Real market data fetch failed:",e),Error(`REAL DATA SERVICE UNAVAILABLE: ${e instanceof Error?e.message:"Unknown error"}`)}}async function p(e,t,r,s="WOOD"){let a=function(e,t){let r=[],s=new Map(e.map(e=>[e.date,e.close])),a=new Map(t.map(e=>[e.date,e.close]));for(let t of e.map(e=>e.date).filter(e=>a.has(e)).sort()){let e=s.get(t),o=a.get(t);e&&o&&r.push({date:t,lumberPrice:e,goldPrice:o})}return r}(e[s],e.GLD),o=[],i=[],n={lumber:a.map(e=>({date:e.date,price:e.lumberPrice})),gold:a.map(e=>({date:e.date,price:e.goldPrice})),ratio:[],signals:[]},l={cash:1e5,shares:0},u=null;for(let e=91;e<a.length;e++){let t,r=a[e],c=a[e-91],d=r.lumberPrice/c.lumberPrice/(r.goldPrice/c.goldPrice),m=d>1?"Risk-On":"Risk-Off",p="Risk-On"===m?s:"GLD",h="Risk-On"===m?r.lumberPrice:r.goldPrice,g=Math.abs(d-1);if(t=g>.15?"Strong":g>.05?"Moderate":"Weak",i.push({date:r.date,lumberPrice:r.lumberPrice,goldPrice:r.goldPrice,lumberGoldRatio:d,signal:m,strength:t}),n.ratio.push({date:r.date,ratio:d}),u!==p&&"Weak"!==t){if(u&&l.shares>0){let e=u===s?r.lumberPrice:r.goldPrice,t=l.shares*e;l.cash=t,o.push({date:r.date,action:"SELL",symbol:u,price:e,signal:m,lumberGoldRatio:d,reasoning:`Close ${u} position - Signal changed to ${m}`})}l.shares=l.cash/h,l.cash=0,u=p,o.push({date:r.date,action:"BUY",symbol:p,price:h,signal:m,lumberGoldRatio:d,reasoning:`Buy ${p} - L/G ratio: ${d.toFixed(3)} (${m})`}),n.signals.push({date:r.date,signal:`${m} (${p})`,price:h})}}let c=a[a.length-1],d=u===s?c.lumberPrice:c.goldPrice,m=(l.shares*d+l.cash-1e5)/1e5,h=Math.pow(1+m,365/((new Date(r).getTime()-new Date(t).getTime())/864e5))-1,g=o.map((e,t)=>{if(0===t)return 0;let r=o[t-1];return(e.price-r.price)/r.price}),f=o.filter((e,t)=>t>0&&g[t]>0).length,R=o.length>1?f/(o.length-1):0,b=1e5,y=0;for(let e=0;e<i.length;e++){let t=1e5*(1+m*(e/i.length));t>b&&(b=t);let r=(b-t)/b;r>y&&(y=r)}let w=g.reduce((e,t)=>e+t,0)/g.length||0,L=Math.sqrt(g.reduce((e,t)=>e+Math.pow(t-w,2),0)/g.length||0),D=L>0?(h-.02)/(L*Math.sqrt(252)):0;return{strategy:"Lumber/Gold Ratio Strategy",symbols:[s,"GLD"],timeframe:{start:t,end:r},performance:{totalReturn:m,annualizedReturn:h,sharpeRatio:D,maxDrawdown:y,winRate:R,totalTrades:o.length},trades:o,signalHistory:i,chartData:n}}async function h(){return n.NextResponse.json({strategy:"Lumber/Gold Ratio Backtesting",description:"Real lumber/gold ratio calculation using 91-day lookback period",requiredSymbols:["One lumber ETF (WOOD or CUT)","GLD"],lumberETFOptions:["WOOD","CUT"],calculation:"Ratio = (Lumber_t/Lumber_t-91) / (Gold_t/Gold_t-91)",signals:{"Risk-On":"Ratio > 1.0 (Lumber outperforming) ‚Üí Buy lumber ETF","Risk-Off":"Ratio < 1.0 (Gold outperforming) ‚Üí Buy GLD"},note:"Uses REAL market data only - no synthetic data generated"})}let g=new a.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/backtest-lumber-gold/route",pathname:"/api/backtest-lumber-gold",filename:"route",bundlePath:"app/api/backtest-lumber-gold/route"},resolvedPagePath:"/Users/philippebeliveau/Desktop/Notebook/gayed-signals-dashboard/apps/web/src/app/api/backtest-lumber-gold/route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:f,workUnitAsyncStorage:R,serverHooks:b}=g;function y(){return(0,i.patchFetch)({workAsyncStorage:f,workUnitAsyncStorage:R})}},48106:(e,t,r)=>{"use strict";e.exports=r(44870)},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},79551:e=>{"use strict";e.exports=require("url")},80408:()=>{},87032:()=>{}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[620,155],()=>r(46852));module.exports=s})();