"use strict";exports.id=994,exports.ids=[994],exports.modules={3338:(e,t,r)=>{r.d(t,{y4:()=>a,p8:()=>i,dc:()=>c});var l=Object.getOwnPropertyNames;let s=((e,t)=>function(){return t||(0,e[l(e)[0]])((t={exports:{}}).exports,t),t.exports})({"src/runtime/node/safe-node-apis.js"(e,t){let{existsSync:l,writeFileSync:s,readFileSync:n,appendFileSync:i,mkdirSync:c,rmSync:a}=r(73024);t.exports={fs:{existsSync:l,writeFileSync:s,readFileSync:n,appendFileSync:i,mkdirSync:c,rmSync:a},path:r(76760),cwd:()=>process.cwd()}}})();function n(e,t){if(!e)throw Error(`Clerk: ${t} is missing. This is an internal error. Please contact Clerk's support.`)}let i=()=>(n(s.fs,"fs"),s.fs),c=()=>(n(s.path,"path"),s.path),a=()=>(n(s.cwd,"cwd"),s.cwd)},74994:(e,t,r)=>{r.r(t),r.d(t,{detectKeylessEnvDrift:()=>c});var l=r(5502),s=r(53056),n=r(3338);let i="KEYLESS_ENV_DRIFT_DETECTED";async function c(){var e,t;if(l.I&&"undefined"==typeof window)try{let{safeParseClerkFile:c}=await r.e(434).then(r.bind(r,37053)),a=c();if(!a)return;let o=process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY,u=process.env.CLERK_SECRET_KEY,d=!!(o||u),p=!!((null==a?void 0:a.publishableKey)&&(null==a?void 0:a.secretKey)),y=!o&&!u;if(!d&&!p||y&&p||!p||!d)return;let f=!!(o&&a.publishableKey&&o===a.publishableKey),K=!!(u&&a.secretKey&&u===a.secretKey);if(!(o&&a.publishableKey&&!f||u&&a.secretKey&&!K))return;let b={publicKeyMatch:f,secretKeyMatch:K,envVarsMissing:y,keylessFileHasKeys:p,keylessPublishableKey:null!=(e=a.publishableKey)?e:"",envPublishableKey:null!=o?o:""},h=(0,s.n)({publishableKey:a.publishableKey,secretKey:a.secretKey,telemetry:{samplingRate:1}});(function(){try{if(!l.I)return!1;{let{mkdirSync:e,writeFileSync:t}=(0,n.p8)(),r=(0,n.dc)(),l=(0,n.dc)().join(process.cwd(),".clerk/.tmp/telemetry.json"),s=r.dirname(l);e(s,{recursive:!0});let c={firedAt:new Date().toISOString(),event:i};return t(l,JSON.stringify(c,null,2),{flag:"wx"}),!0}}catch(e){if((null==e?void 0:e.code)==="EEXIST")return!1;return console.warn("Failed to create telemetry flag file:",e),!1}})()&&(null==(t=h.telemetry)||t.record({event:i,eventSamplingRate:1,payload:b}))}catch(e){console.warn("Failed to detect keyless environment drift:",e)}}}};