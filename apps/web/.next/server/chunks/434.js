"use strict";exports.id=434,exports.ids=[434],exports.modules={37053:(e,t,r)=>{r.r(t),r.d(t,{createOrReadKeyless:()=>m,removeKeyless:()=>k,safeParseClerkFile:()=>p});var n=r(53056),c=r(3338),i=r(37757);let l=".clerk",s="clerk.lock",a=(...e)=>{let t=(0,c.dc)(),r=(0,c.y4)();return t.join(r(),l,...e)},o=".tmp",u=()=>a(o,"keyless.json"),d=()=>a(o,"README.md"),f=!1;function p(){let{readFileSync:e}=(0,c.p8)();try{let t,r=u();try{t=e(r,{encoding:"utf-8"})||"{}"}catch{t="{}"}return JSON.parse(t)}catch{return}}let y=()=>{let{writeFileSync:e}=(0,c.p8)();f=!0,e(s,"This file can be deleted. Please delete this file and refresh your application",{encoding:"utf8",mode:"0777",flag:"w"})},h=()=>{let{rmSync:e}=(0,c.p8)();try{e(s,{force:!0,recursive:!0})}catch{}f=!1},g=()=>{let{existsSync:e}=(0,c.p8)();return f||e(s)};async function m(){let{writeFileSync:e,mkdirSync:t}=(0,c.p8)();if(g())return null;y();let r=u(),s=d();t(a(o),{recursive:!0}),function(){let{existsSync:e,writeFileSync:t,readFileSync:r,appendFileSync:n}=(0,c.p8)(),i=(0,c.dc)(),s=(0,c.y4)(),a=i.join(s(),".gitignore");e(a)||t(a,""),r(a,"utf-8").includes(l+"/")||n(a,`
# clerk configuration (can include secrets)
/${l}/
`)}();let f=p();if((null==f?void 0:f.publishableKey)&&(null==f?void 0:f.secretKey))return h(),f;let m=(0,n.n)({}),k=await (0,i.i)().then(i.$).catch(()=>new Headers),v=await m.__experimental_accountlessApplications.createAccountlessApplication({requestHeaders:k}).catch(()=>null);return v&&(e(r,JSON.stringify(v),{encoding:"utf8",mode:"0777",flag:"w"}),e(s,`
## DO NOT COMMIT
This directory is auto-generated from \`@clerk/nextjs\` because you are running in Keyless mode. Avoid committing the \`.clerk/\` directory as it includes the secret key of the unclaimed instance.
  `,{encoding:"utf8",mode:"0777",flag:"w"})),h(),v}function k(){let{rmSync:e}=(0,c.p8)();if(!g()){y();try{e(a(),{force:!0,recursive:!0})}catch{}h()}}}};